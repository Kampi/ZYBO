// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Filter_HH_
#define _Filter_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Filter_mul_mul_16eOg.h"
#include "Filter_ShiftRegRibkb.h"
#include "Filter_CoefficiendEe.h"

namespace ap_rtl {

struct Filter : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > DataIn_TDATA;
    sc_in< sc_logic > DataIn_TVALID;
    sc_out< sc_logic > DataIn_TREADY;
    sc_out< sc_lv<32> > DataOut_TDATA;
    sc_out< sc_logic > DataOut_TVALID;
    sc_in< sc_logic > DataOut_TREADY;
    sc_in< sc_logic > Enable;


    // Module declarations
    Filter(sc_module_name name);
    SC_HAS_PROCESS(Filter);

    ~Filter();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    Filter_ShiftRegRibkb* ShiftRegRight_V_U;
    Filter_ShiftRegRibkb* ShiftRegLeft_V_U;
    Filter_CoefficiendEe* Coefficients_V_U;
    Filter_mul_mul_16eOg<1,1,16,18,33>* Filter_mul_mul_16eOg_U1;
    Filter_mul_mul_16eOg<1,1,16,18,33>* Filter_mul_mul_16eOg_U2;
    regslice_both<32>* regslice_both_DataIn_U;
    regslice_both<32>* regslice_both_DataOut_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<5> > ShiftRegRight_V_address0;
    sc_signal< sc_logic > ShiftRegRight_V_ce0;
    sc_signal< sc_logic > ShiftRegRight_V_we0;
    sc_signal< sc_lv<16> > ShiftRegRight_V_d0;
    sc_signal< sc_lv<16> > ShiftRegRight_V_q0;
    sc_signal< sc_lv<5> > ShiftRegLeft_V_address0;
    sc_signal< sc_logic > ShiftRegLeft_V_ce0;
    sc_signal< sc_logic > ShiftRegLeft_V_we0;
    sc_signal< sc_lv<16> > ShiftRegLeft_V_d0;
    sc_signal< sc_lv<16> > ShiftRegLeft_V_q0;
    sc_signal< sc_lv<5> > Coefficients_V_address0;
    sc_signal< sc_logic > Coefficients_V_ce0;
    sc_signal< sc_lv<18> > Coefficients_V_q0;
    sc_signal< sc_logic > DataIn_TDATA_blk_n;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > DataOut_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<16> > trunc_ln703_fu_231_p1;
    sc_signal< sc_lv<16> > trunc_ln703_reg_363;
    sc_signal< sc_lv<1> > Enable_read_read_fu_82_p2;
    sc_signal< sc_lv<16> > trunc_ln703_1_reg_368;
    sc_signal< sc_lv<32> > sext_ln20_fu_245_p1;
    sc_signal< sc_lv<32> > sext_ln20_reg_373;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln22_fu_257_p2;
    sc_signal< sc_lv<1> > icmp_ln22_reg_382;
    sc_signal< sc_lv<1> > tmp_2_fu_249_p3;
    sc_signal< sc_lv<32> > or_ln_fu_289_p3;
    sc_signal< sc_lv<6> > grp_fu_224_p2;
    sc_signal< sc_lv<6> > i_reg_401;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<16> > ShiftRegRight_V_load_1_reg_421;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<18> > Coefficients_V_load_reg_426;
    sc_signal< sc_lv<16> > ShiftRegLeft_V_load_1_reg_431;
    sc_signal< sc_lv<33> > mul_ln703_1_fu_343_p2;
    sc_signal< sc_lv<33> > mul_ln703_1_reg_436;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<33> > mul_ln703_fu_349_p2;
    sc_signal< sc_lv<33> > mul_ln703_reg_441;
    sc_signal< sc_lv<48> > AccRight_V_fu_324_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<48> > AccLeft_V_fu_337_p2;
    sc_signal< sc_lv<48> > p_Val2_2_reg_176;
    sc_signal< sc_lv<48> > p_Val2_s_reg_188;
    sc_signal< sc_lv<6> > ap_phi_mux_i_0_phi_fu_204_p4;
    sc_signal< sc_lv<6> > i_0_reg_200;
    sc_signal< sc_lv<32> > storemerge_reg_212;
    sc_signal< sc_lv<64> > zext_ln29_1_fu_263_p1;
    sc_signal< sc_lv<64> > zext_ln29_fu_297_p1;
    sc_signal< sc_lv<64> > zext_ln33_fu_302_p1;
    sc_signal< sc_lv<6> > grp_fu_224_p0;
    sc_signal< sc_lv<16> > tmp_1_fu_279_p4;
    sc_signal< sc_lv<16> > tmp_fu_269_p4;
    sc_signal< sc_lv<48> > shl_ln_fu_317_p3;
    sc_signal< sc_lv<48> > shl_ln703_1_fu_330_p3;
    sc_signal< sc_lv<18> > mul_ln703_1_fu_343_p1;
    sc_signal< sc_lv<33> > sext_ln1118_fu_308_p1;
    sc_signal< sc_lv<18> > mul_ln703_fu_349_p1;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    sc_signal< sc_logic > regslice_both_DataOut_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_DataIn_U_apdone_blk;
    sc_signal< sc_lv<32> > DataIn_TDATA_int;
    sc_signal< sc_logic > DataIn_TVALID_int;
    sc_signal< sc_logic > DataIn_TREADY_int;
    sc_signal< sc_logic > regslice_both_DataIn_U_ack_in;
    sc_signal< sc_logic > DataOut_TVALID_int;
    sc_signal< sc_logic > DataOut_TREADY_int;
    sc_signal< sc_logic > regslice_both_DataOut_U_vld_out;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<48> ap_const_lv48_0;
    static const sc_lv<6> ap_const_lv6_12;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<6> ap_const_lv6_3F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<15> ap_const_lv15_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_AccLeft_V_fu_337_p2();
    void thread_AccRight_V_fu_324_p2();
    void thread_Coefficients_V_address0();
    void thread_Coefficients_V_ce0();
    void thread_DataIn_TDATA_blk_n();
    void thread_DataIn_TREADY();
    void thread_DataIn_TREADY_int();
    void thread_DataOut_TDATA_blk_n();
    void thread_DataOut_TVALID();
    void thread_DataOut_TVALID_int();
    void thread_Enable_read_read_fu_82_p2();
    void thread_ShiftRegLeft_V_address0();
    void thread_ShiftRegLeft_V_ce0();
    void thread_ShiftRegLeft_V_d0();
    void thread_ShiftRegLeft_V_we0();
    void thread_ShiftRegRight_V_address0();
    void thread_ShiftRegRight_V_ce0();
    void thread_ShiftRegRight_V_d0();
    void thread_ShiftRegRight_V_we0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_phi_mux_i_0_phi_fu_204_p4();
    void thread_ap_rst_n_inv();
    void thread_grp_fu_224_p0();
    void thread_grp_fu_224_p2();
    void thread_icmp_ln22_fu_257_p2();
    void thread_mul_ln703_1_fu_343_p1();
    void thread_mul_ln703_fu_349_p1();
    void thread_or_ln_fu_289_p3();
    void thread_sext_ln1118_fu_308_p1();
    void thread_sext_ln20_fu_245_p1();
    void thread_shl_ln703_1_fu_330_p3();
    void thread_shl_ln_fu_317_p3();
    void thread_tmp_1_fu_279_p4();
    void thread_tmp_2_fu_249_p3();
    void thread_tmp_fu_269_p4();
    void thread_trunc_ln703_fu_231_p1();
    void thread_zext_ln29_1_fu_263_p1();
    void thread_zext_ln29_fu_297_p1();
    void thread_zext_ln33_fu_302_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
